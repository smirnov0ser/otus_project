
Процедура РегламентноеЗадание_ОтправитьВRMQ() Экспорт
	//Параметры подключения - лучше в настройки
	Адрес = "localhost";
	Порт = 5672; 
	Логин = "guest"; 
	Пароль = "guest";
	ВиртуальныйХост = "otus";
	ТочкаОбмена = "mdm";
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОчередьRMQ.ID КАК ID,
		|	ОчередьRMQ.Сообщение КАК Сообщение,
		|	ОчередьRMQ.Маршрутизация КАК Маршрутизация
		|ИЗ
		|	РегистрСведений.ОчередьRMQ КАК ОчередьRMQ";	
	РезультатЗапроса = Запрос.Выполнить(); 
	Если НЕ РезультатЗапроса.Пустой() Тогда
		КлиентКомпоненты = ПолучитьКомпонентуСервер();
		КлиентКомпоненты.Connect(Адрес,Порт,Логин,Пароль,ВиртуальныйХост);
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 			
			Попытка							
				КлиентКомпоненты.BasicPublish(ТочкаОбмена,Выборка.Маршрутизация,Выборка.Сообщение,1,Ложь); 
				
				//очистка очереди из 1С
				МЗ = РегистрыСведений.ОчередьRMQ.СоздатьМенеджерЗаписи();
				МЗ.ID = Выборка.ID; 
				МЗ.Удалить();
				
			Исключение
				СистемнаяОшибка = ОписаниеОшибки();
				ТекстСообщения = "Ошибка отправки сообщения!%СистемнаяОшибка%";
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
				ВызватьИсключение ТекстСообщения;
			КонецПопытки;
					
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура РегламентноеЗадание_ПрочитатьRMQ() Экспорт
	//Параметры подключения - лучше в настройки 
	Адрес = "localhost";
	Порт = 5672; 
	Логин = "guest"; 
	Пароль = "guest";
	ВиртуальныйХост = "otus";
	ТочкаОбмена = "mdm";
	ИмяОчереди = "wms1";
	
	Попытка
		КлиентКомпоненты = ПолучитьКомпонентуСервер();
		КлиентКомпоненты.Connect(Адрес,Порт,Логин,Пароль,ВиртуальныйХост);	
		КлиентКомпоненты.DeclareQueue(ИмяОчереди, Истина, Истина, Ложь, Ложь);
		
		Потребитель = КлиентКомпоненты.BasicConsume(ИмяОчереди, "", Истина, Ложь, 0);
		
		ОтветноеСообщение = "";
		Пока КлиентКомпоненты.BasicConsumeMessage("", ОтветноеСообщение, 5) Цикл		
			ЗагрузитьОбновитьКонтрагента(ОтветноеСообщение);			
			КлиентКомпоненты.BasicAck();
		КонецЦикла;
		
		КлиентКомпоненты.BasicCancel("");
	Исключение
		ВызватьИсключение КлиентКомпоненты.GetLastError();
	КонецПопытки;
КонецПроцедуры

Процедура ПриЗаписиRMQПриЗаписи(Источник, Отказ) Экспорт
	Если Источник.ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	//Тут дополнительные условия на отправку.
	//В моем случае разрешено всегда, без фильтров
	ОтправкаРазрешена = Истина;	
	Если не ОтправкаРазрешена Тогда
		Возврат;
	КонецЕсли;
	
	//Получение настройки маршрутизации
	//В момем случае в настройки не выношу 
	Маршрутизация = "wms.1"; //лучше в настройки
	
	//Формирование сообщения json
	Данные = Новый Структура;  
    Данные.Вставить("Ссылка", XMLСтрока(Источник.Ссылка)); 
	Данные.Вставить("Наименование", Источник.Наименование);
	Данные.Вставить("Код", Источник.Код);	
	ЗаписьJSON = Новый ЗаписьJSON; 
	ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON,Данные);  
    Сообщение = ЗаписьJSON.Закрыть();
	
	//Запись сообщения в очередь 
	МЗ = РегистрыСведений.ОчередьRMQ.СоздатьМенеджерЗаписи();
	МЗ.ID = новый УникальныйИдентификатор;
	МЗ.Сообщение = Сообщение;
	МЗ.Маршрутизация = Маршрутизация;
	МЗ.Записать();
	
КонецПроцедуры  

Процедура ЗагрузитьОбновитьКонтрагента(СтрокаJSON)
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);  
	ДанныеКонтагента = ПрочитатьJSON(ЧтениеJSON);            
	ЧтениеJSON.Закрыть();
	
	КонтрагентСсылка =  Справочники.КонтрагентыПолученые.НайтиПоКоду(ДанныеКонтагента.Код);
	Если ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		КонтрагентОбъект = КонтрагентСсылка.ПолучитьОбъект();		
	Иначе
		КонтрагентОбъект = Справочники.КонтрагентыПолученые.СоздатьЭлемент();
		КонтрагентОбъект.Код = ДанныеКонтагента.Код;
	КонецЕсли; 
	КонтрагентОбъект.Наименование = ДанныеКонтагента.Наименование;
	КонтрагентОбъект.ОбменДанными.Загрузка = Истина;
	КонтрагентОбъект.Записать();	
КонецПроцедуры

Функция ПолучитьКомпонентуСервер()
	
	КлиентКомпоненты = Неопределено;
	Если Не ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты) Тогда
		
		ПодключитьКомпонентуСервер();
		ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты);
		
	КонецЕсли;
	
	Возврат КлиентКомпоненты;
КонецФункции  

Процедура ПодключитьКомпонентуСервер(КомпонентаПодключена = Неопределено)
	
	
	МакетВнешнейКомпоненты    = ПолучитьОбщийМакет("КомпонентаRMQ");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(МакетВнешнейКомпоненты, Новый УникальныйИдентификатор());
	
	КомпонентаПодключена = ПодключитьВнешнююКомпоненту(
			АдресВоВременномХранилище,
			"BITERP",
			ТипВнешнейКомпоненты.Native);
	Сообщить(НСтр("ru = 'Компонента подключена!'"));
КонецПроцедуры

Функция ИнициализироватьКомпонентуКлиентСервер(Компонента)
	
	Попытка
		Компонента  = Новый("AddIn.BITERP.PinkRabbitMQ");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции




