
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// регистр СвободныеОстатки Расход
	Движения.СвободныеОстатки.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.СвободныеОстатки.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если Отказ Тогда
		Возврат 
	КонецЕсли;
	
	//Rabbit MQ
	Маршрутизация = "CRM_OrderStatus";
	
	//Отправляться будут только заказы с Кодом CRM
	Если ЗначениеЗаполнено(НомерCRM) Тогда
		//Запись сообщения в очередь
		
		Данные = Новый Структура;  
	    Данные.Вставить("НомерCRM", НомерCRM); 
		Данные.Вставить("Статус", XMLСтрока(Статус));
		ЗаписьJSON = Новый ЗаписьJSON; 
		ЗаписьJSON.УстановитьСтроку();
	    ЗаписатьJSON(ЗаписьJSON,Данные);  
	    Сообщение = ЗаписьJSON.Закрыть();
		
		СтрНЗ = НЗОчередьRMQ.Добавить();
		СтрНЗ.ID = новый УникальныйИдентификатор;
		СтрНЗ.Сообщение = Сообщение;
		СтрНЗ.Маршрутизация = Маршрутизация;
		СтрНЗ.Записать();
	КонецЦикла;
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Товары.Итог("Сумма");
КонецПроцедуры

